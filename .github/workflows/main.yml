name: Build & Push (classic Docker CLI)

on:
  push:
    branches: ["main"]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/dummy-app

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      # needed to create & push git tags
      contents: write
      # needed to push images to Docker Hub
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      #fetch every remote tag (keeps versioning in sync)
      - name: Fetch all tags
        run: git fetch --tags --force --prune

      # detect latest semantic-version tag
      - name: Detect latest version
        id: cur
        run: |
          latest=$(git tag --list | sort -V | tail -n1)   # 1.2.9 < 1.2.10
          echo "tag=${latest:-1.0.0}" >>"$GITHUB_OUTPUT"

      # bump the patch number (1.0.0 → 1.0.1, etc.)
      - name: Bump patch
        id: bump
        uses: christian-draeger/increment-semantic-version@1.2.3
        with:
          current-version: ${{ steps.cur.outputs.tag }}
          version-fragment: patch

      # create the new git tag only if it doesn't already exist
      - name: Create & push git tag
        env:
          NEW: ${{ steps.bump.outputs.next-version }}
        run: |
          if git rev-parse -q --verify "refs/tags/$NEW" >/dev/null; then
            echo "Tag $NEW already exists – skipping."
            exit 0
          fi
          git tag "$NEW"
          git push origin "$NEW"

      # log in to Docker Hub (classic CLI)
      - name: Docker Hub login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" |
             docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # build the image and push both versioned & latest tags
      - name: Build image
        run: |
          docker build -t $IMAGE_NAME:${{ steps.bump.outputs.next-version }} \
                       -t $IMAGE_NAME:latest .
      - name: Push image
        run: |
          docker push $IMAGE_NAME:${{ steps.bump.outputs.next-version }}
          docker push $IMAGE_NAME:latest
